name: Stage CI/CD
on:
  push:
    branches:
      - stage
  pull_request:
    branches:
      - stage
  workflow_dispatch:  

env:
  CI: false
  MANIFEST_FILE: 'K8s-Manifest/Rahat/OffRamp-Stage/rollout.yaml'

jobs:
  docker_build:
    name: build docker images and push to DH
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Import Secrets
        uses: hashicorp/vault-action@v2.4.0
        with:
          url: ${{ secrets.VAULT_URL }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            github/data/general/docker/esatya username | DOCKERHUB_USERNAME ;
            github/data/general/docker/esatya password | DOCKERHUB_TOKEN ;
            github/data/rahat/offramp stage | ENV ;

      - name: create environment file
        run: |
          tee ./.env <<<"$ENV"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Image
      - name: build && push Client
        id: build-push-client
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          file: Dockerfile.standalone
          push: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
          tags: |
            esatya/rahat-offramp:stage
            esatya/rahat-offramp:stage-${{ steps.vars.outputs.sha_short }}

    outputs:
        sha_short: ${{ steps.vars.outputs.sha_short }}
  update-manifest:
    name: Update Kubernetes Manifest
    needs: docker_build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Import Secrets
        uses: hashicorp/vault-action@v2.4.0
        with:
          url: ${{ secrets.VAULT_URL }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            github/data/general/Stage-Manifest repo | MANIFEST_REPO ;
            github/data/general/Stage-Manifest ssh-key | SSH_KEY ;

      # Checkout the manifest repository using SSH
      - name: Checkout Stage Manifest Repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.MANIFEST_REPO }}
          ssh-key: ${{ env.SSH_KEY }}

      # Update the image tag in the manifest
      - name: Update Image Tag in Manifest
        run: |
          sed -i "s|image: esatya/rahat-offramp:.*|image: esatya/rahat-offramp:stage-${{ needs.docker_build.outputs.sha_short }}|" ${{ env.MANIFEST_FILE }}

      # Commit and push changes using SSH
      - name: Commit and Push Changes
        run: |
          git config user.name "sandab-rumsan"
          git config user.email "sandab@rumsan.net"
          git add ${{ env.MANIFEST_FILE }}
          git commit -m "runner: Update Rahat OffRamp Stage image tag to stage-${{ needs.docker_build.outputs.sha_short }}"
          git push origin main